//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SightDistanceComponent sightDistance { get { return (SightDistanceComponent)GetComponent(GameComponentsLookup.SightDistance); } }
    public bool hasSightDistance { get { return HasComponent(GameComponentsLookup.SightDistance); } }

    public void AddSightDistance(float newValue) {
        var index = GameComponentsLookup.SightDistance;
        var component = (SightDistanceComponent)CreateComponent(index, typeof(SightDistanceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSightDistance(float newValue) {
        var index = GameComponentsLookup.SightDistance;
        var component = (SightDistanceComponent)CreateComponent(index, typeof(SightDistanceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSightDistance() {
        RemoveComponent(GameComponentsLookup.SightDistance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSightDistance;

    public static Entitas.IMatcher<GameEntity> SightDistance {
        get {
            if (_matcherSightDistance == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SightDistance);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSightDistance = matcher;
            }

            return _matcherSightDistance;
        }
    }
}
