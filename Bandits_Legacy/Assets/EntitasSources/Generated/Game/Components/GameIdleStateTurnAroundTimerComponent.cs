//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public IdleStateTurnAroundTimerComponent idleStateTurnAroundTimer { get { return (IdleStateTurnAroundTimerComponent)GetComponent(GameComponentsLookup.IdleStateTurnAroundTimer); } }
    public bool hasIdleStateTurnAroundTimer { get { return HasComponent(GameComponentsLookup.IdleStateTurnAroundTimer); } }

    public void AddIdleStateTurnAroundTimer(float newValue) {
        var index = GameComponentsLookup.IdleStateTurnAroundTimer;
        var component = (IdleStateTurnAroundTimerComponent)CreateComponent(index, typeof(IdleStateTurnAroundTimerComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceIdleStateTurnAroundTimer(float newValue) {
        var index = GameComponentsLookup.IdleStateTurnAroundTimer;
        var component = (IdleStateTurnAroundTimerComponent)CreateComponent(index, typeof(IdleStateTurnAroundTimerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveIdleStateTurnAroundTimer() {
        RemoveComponent(GameComponentsLookup.IdleStateTurnAroundTimer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIdleStateTurnAroundTimer;

    public static Entitas.IMatcher<GameEntity> IdleStateTurnAroundTimer {
        get {
            if (_matcherIdleStateTurnAroundTimer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IdleStateTurnAroundTimer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIdleStateTurnAroundTimer = matcher;
            }

            return _matcherIdleStateTurnAroundTimer;
        }
    }
}
