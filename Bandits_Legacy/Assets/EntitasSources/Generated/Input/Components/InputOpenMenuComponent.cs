//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity openMenuEntity { get { return GetGroup(InputMatcher.OpenMenu).GetSingleEntity(); } }
    public OpenMenuComponent openMenu { get { return openMenuEntity.openMenu; } }
    public bool hasOpenMenu { get { return openMenuEntity != null; } }

    public InputEntity SetOpenMenu(bool newIsPressed) {
        if (hasOpenMenu) {
            throw new Entitas.EntitasException("Could not set OpenMenu!\n" + this + " already has an entity with OpenMenuComponent!",
                "You should check if the context already has a openMenuEntity before setting it or use context.ReplaceOpenMenu().");
        }
        var entity = CreateEntity();
        entity.AddOpenMenu(newIsPressed);
        return entity;
    }

    public void ReplaceOpenMenu(bool newIsPressed) {
        var entity = openMenuEntity;
        if (entity == null) {
            entity = SetOpenMenu(newIsPressed);
        } else {
            entity.ReplaceOpenMenu(newIsPressed);
        }
    }

    public void RemoveOpenMenu() {
        openMenuEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public OpenMenuComponent openMenu { get { return (OpenMenuComponent)GetComponent(InputComponentsLookup.OpenMenu); } }
    public bool hasOpenMenu { get { return HasComponent(InputComponentsLookup.OpenMenu); } }

    public void AddOpenMenu(bool newIsPressed) {
        var index = InputComponentsLookup.OpenMenu;
        var component = (OpenMenuComponent)CreateComponent(index, typeof(OpenMenuComponent));
        component.IsPressed = newIsPressed;
        AddComponent(index, component);
    }

    public void ReplaceOpenMenu(bool newIsPressed) {
        var index = InputComponentsLookup.OpenMenu;
        var component = (OpenMenuComponent)CreateComponent(index, typeof(OpenMenuComponent));
        component.IsPressed = newIsPressed;
        ReplaceComponent(index, component);
    }

    public void RemoveOpenMenu() {
        RemoveComponent(InputComponentsLookup.OpenMenu);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherOpenMenu;

    public static Entitas.IMatcher<InputEntity> OpenMenu {
        get {
            if (_matcherOpenMenu == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.OpenMenu);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherOpenMenu = matcher;
            }

            return _matcherOpenMenu;
        }
    }
}
