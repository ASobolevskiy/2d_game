//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HealDamageComponent healDamage { get { return (HealDamageComponent)GetComponent(GameComponentsLookup.HealDamage); } }
    public bool hasHealDamage { get { return HasComponent(GameComponentsLookup.HealDamage); } }

    public void AddHealDamage(int newAmount) {
        var index = GameComponentsLookup.HealDamage;
        var component = (HealDamageComponent)CreateComponent(index, typeof(HealDamageComponent));
        component.Amount = newAmount;
        AddComponent(index, component);
    }

    public void ReplaceHealDamage(int newAmount) {
        var index = GameComponentsLookup.HealDamage;
        var component = (HealDamageComponent)CreateComponent(index, typeof(HealDamageComponent));
        component.Amount = newAmount;
        ReplaceComponent(index, component);
    }

    public void RemoveHealDamage() {
        RemoveComponent(GameComponentsLookup.HealDamage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHealDamage;

    public static Entitas.IMatcher<GameEntity> HealDamage {
        get {
            if (_matcherHealDamage == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HealDamage);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHealDamage = matcher;
            }

            return _matcherHealDamage;
        }
    }
}
