//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameCycleContext {

    public GameCycleEntity pauseEntity { get { return GetGroup(GameCycleMatcher.Pause).GetSingleEntity(); } }
    public PauseComponent pause { get { return pauseEntity.pause; } }
    public bool hasPause { get { return pauseEntity != null; } }

    public GameCycleEntity SetPause(bool newPauseRequired) {
        if (hasPause) {
            throw new Entitas.EntitasException("Could not set Pause!\n" + this + " already has an entity with PauseComponent!",
                "You should check if the context already has a pauseEntity before setting it or use context.ReplacePause().");
        }
        var entity = CreateEntity();
        entity.AddPause(newPauseRequired);
        return entity;
    }

    public void ReplacePause(bool newPauseRequired) {
        var entity = pauseEntity;
        if (entity == null) {
            entity = SetPause(newPauseRequired);
        } else {
            entity.ReplacePause(newPauseRequired);
        }
    }

    public void RemovePause() {
        pauseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameCycleEntity {

    public PauseComponent pause { get { return (PauseComponent)GetComponent(GameCycleComponentsLookup.Pause); } }
    public bool hasPause { get { return HasComponent(GameCycleComponentsLookup.Pause); } }

    public void AddPause(bool newPauseRequired) {
        var index = GameCycleComponentsLookup.Pause;
        var component = (PauseComponent)CreateComponent(index, typeof(PauseComponent));
        component.PauseRequired = newPauseRequired;
        AddComponent(index, component);
    }

    public void ReplacePause(bool newPauseRequired) {
        var index = GameCycleComponentsLookup.Pause;
        var component = (PauseComponent)CreateComponent(index, typeof(PauseComponent));
        component.PauseRequired = newPauseRequired;
        ReplaceComponent(index, component);
    }

    public void RemovePause() {
        RemoveComponent(GameCycleComponentsLookup.Pause);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameCycleMatcher {

    static Entitas.IMatcher<GameCycleEntity> _matcherPause;

    public static Entitas.IMatcher<GameCycleEntity> Pause {
        get {
            if (_matcherPause == null) {
                var matcher = (Entitas.Matcher<GameCycleEntity>)Entitas.Matcher<GameCycleEntity>.AllOf(GameCycleComponentsLookup.Pause);
                matcher.componentNames = GameCycleComponentsLookup.componentNames;
                _matcherPause = matcher;
            }

            return _matcherPause;
        }
    }
}
