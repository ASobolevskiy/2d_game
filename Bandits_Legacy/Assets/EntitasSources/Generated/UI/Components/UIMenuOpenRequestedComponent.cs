//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIContext {

    public UIEntity menuOpenRequestedEntity { get { return GetGroup(UIMatcher.MenuOpenRequested).GetSingleEntity(); } }

    public bool isMenuOpenRequested {
        get { return menuOpenRequestedEntity != null; }
        set {
            var entity = menuOpenRequestedEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isMenuOpenRequested = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIEntity {

    static readonly MenuOpenRequested menuOpenRequestedComponent = new MenuOpenRequested();

    public bool isMenuOpenRequested {
        get { return HasComponent(UIComponentsLookup.MenuOpenRequested); }
        set {
            if (value != isMenuOpenRequested) {
                var index = UIComponentsLookup.MenuOpenRequested;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : menuOpenRequestedComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UIMatcher {

    static Entitas.IMatcher<UIEntity> _matcherMenuOpenRequested;

    public static Entitas.IMatcher<UIEntity> MenuOpenRequested {
        get {
            if (_matcherMenuOpenRequested == null) {
                var matcher = (Entitas.Matcher<UIEntity>)Entitas.Matcher<UIEntity>.AllOf(UIComponentsLookup.MenuOpenRequested);
                matcher.componentNames = UIComponentsLookup.componentNames;
                _matcherMenuOpenRequested = matcher;
            }

            return _matcherMenuOpenRequested;
        }
    }
}
