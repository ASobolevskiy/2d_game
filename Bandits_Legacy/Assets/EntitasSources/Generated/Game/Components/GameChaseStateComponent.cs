//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ChaseStateComponent chaseState { get { return (ChaseStateComponent)GetComponent(GameComponentsLookup.ChaseState); } }
    public bool hasChaseState { get { return HasComponent(GameComponentsLookup.ChaseState); } }

    public void AddChaseState(GameEntity newTarget) {
        var index = GameComponentsLookup.ChaseState;
        var component = (ChaseStateComponent)CreateComponent(index, typeof(ChaseStateComponent));
        component.Target = newTarget;
        AddComponent(index, component);
    }

    public void ReplaceChaseState(GameEntity newTarget) {
        var index = GameComponentsLookup.ChaseState;
        var component = (ChaseStateComponent)CreateComponent(index, typeof(ChaseStateComponent));
        component.Target = newTarget;
        ReplaceComponent(index, component);
    }

    public void RemoveChaseState() {
        RemoveComponent(GameComponentsLookup.ChaseState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChaseState;

    public static Entitas.IMatcher<GameEntity> ChaseState {
        get {
            if (_matcherChaseState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChaseState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChaseState = matcher;
            }

            return _matcherChaseState;
        }
    }
}
