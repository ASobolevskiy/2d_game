//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIContext {

    public UIEntity playerHitPointsEntity { get { return GetGroup(UIMatcher.PlayerHitPoints).GetSingleEntity(); } }
    public PlayerHitPointsComponent playerHitPoints { get { return playerHitPointsEntity.playerHitPoints; } }
    public bool hasPlayerHitPoints { get { return playerHitPointsEntity != null; } }

    public UIEntity SetPlayerHitPoints(int newValue) {
        if (hasPlayerHitPoints) {
            throw new Entitas.EntitasException("Could not set PlayerHitPoints!\n" + this + " already has an entity with PlayerHitPointsComponent!",
                "You should check if the context already has a playerHitPointsEntity before setting it or use context.ReplacePlayerHitPoints().");
        }
        var entity = CreateEntity();
        entity.AddPlayerHitPoints(newValue);
        return entity;
    }

    public void ReplacePlayerHitPoints(int newValue) {
        var entity = playerHitPointsEntity;
        if (entity == null) {
            entity = SetPlayerHitPoints(newValue);
        } else {
            entity.ReplacePlayerHitPoints(newValue);
        }
    }

    public void RemovePlayerHitPoints() {
        playerHitPointsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIEntity {

    public PlayerHitPointsComponent playerHitPoints { get { return (PlayerHitPointsComponent)GetComponent(UIComponentsLookup.PlayerHitPoints); } }
    public bool hasPlayerHitPoints { get { return HasComponent(UIComponentsLookup.PlayerHitPoints); } }

    public void AddPlayerHitPoints(int newValue) {
        var index = UIComponentsLookup.PlayerHitPoints;
        var component = (PlayerHitPointsComponent)CreateComponent(index, typeof(PlayerHitPointsComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerHitPoints(int newValue) {
        var index = UIComponentsLookup.PlayerHitPoints;
        var component = (PlayerHitPointsComponent)CreateComponent(index, typeof(PlayerHitPointsComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerHitPoints() {
        RemoveComponent(UIComponentsLookup.PlayerHitPoints);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UIMatcher {

    static Entitas.IMatcher<UIEntity> _matcherPlayerHitPoints;

    public static Entitas.IMatcher<UIEntity> PlayerHitPoints {
        get {
            if (_matcherPlayerHitPoints == null) {
                var matcher = (Entitas.Matcher<UIEntity>)Entitas.Matcher<UIEntity>.AllOf(UIComponentsLookup.PlayerHitPoints);
                matcher.componentNames = UIComponentsLookup.componentNames;
                _matcherPlayerHitPoints = matcher;
            }

            return _matcherPlayerHitPoints;
        }
    }
}
